// React
import * as React from 'react';
import * as ReactDOM from 'react-dom';

// Styling
import styles from '../resources/Dashdemo.module.scss';

// Office-Ui Fabric Components
import {
	DocumentCard,
	DocumentCardTitle,
	DocumentCardActivity,
	DocumentCardPreview,
	DocumentCardActions,
	IDocumentCardPreviewProps,
	DocumentCardType
} from 'office-ui-fabric-react/lib/DocumentCard';
import { ImageFit } from 'office-ui-fabric-react/lib/Image';
import { Modal } from 'office-ui-fabric-react/lib/Modal';
import { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';
// Custom components and properties
import { IDashdemoProps } from './IDashdemoProps';

// local state
export interface localState {
	rowClasses: string;
}

// component class definition
export default class LinkCard extends React.Component<any, any> {

	// constructor
	public constructor(props: IDashdemoProps) {
		super(props);
	}


	// return loading if the incidents state has not yet been set
	public render(): React.ReactElement<IDashdemoProps> {
		console.log('linkCard - render - this.props', this.props)
		const links = this.props.links.slice(0, this.props.showRecentIncidents);
		const handler = this.props.handler;
		const rootUrl = window.location.origin;
		const siteName = "dev"
		const listName = "SiteAssets"
		const fileName = "preview200.jpg"
		let previewURL = rootUrl + "/sites/" + siteName + "/" + listName + "/" + fileName;

		if (!links) {
			return <div>Loading...</div>;
		}

		// return list of incidents
		return (
			<DocumentCard
				type={DocumentCardType.compact}
				className={styles.incidentCard}
				onClick={handler.bind(this, link)}>
				<div className='ms-DocumentCard-details'>
					<DocumentCardTitle
						title={link.Title}
						shouldTruncate={true}
					/>
					<DocumentCardActivity
						activity={link.Created}
						people={
							[
								{ name: 'Annie Lindqvist', profileImageSrc: null }
							]
						}
					/>
				</div>
			</DocumentCard>
		);
	}
}




/*

<DocumentCardActions
					actions={
						[
							{
								iconProps: { iconName: 'Share' },
								onClick: (ev: any) => {
									console.log('You clicked the share action.');
									ev.preventDefault();
									ev.stopPropagation();
								},
								ariaLabel: 'share action'
							},
							{
								iconProps: { iconName: 'Pin' },
								onClick: (ev: any) => {
									console.log('You clicked the pin action.');
									ev.preventDefault();
									ev.stopPropagation();
								},
								ariaLabel: 'pin action'
							},
							{
								iconProps: { iconName: 'Ringer' },
								onClick: (ev: any) => {
									console.log('You clicked the ringer action.');
									ev.preventDefault();
									ev.stopPropagation();
								},
								ariaLabel: 'ringer action'
							},
						]
					}
					views={432}
				/>

*/


















